#Exo 2: Minimisation d'une fonction donné par la méthode de KARNAUGH

#ALGORITHME
from itertools import product

def generate_truth_table(num_vars):
    truth_table = []
    for combo in product([0, 1], repeat=num_vars):
        truth_table.append(list(combo))
    return truth_table

def minimize_with_karnaugh(truth_table, num_vars):
    groups = []
    for row in range(len(truth_table)):
        minterm = ""
        for var in range(num_vars):
            minterm += str(truth_table[row][var])
        groups.append(minterm)

    return groups

def main():
    num_vars = int(input("Entrez le nombre de variables dans la fonction logique : "))
    function = input("Entrez la fonction logique (utilisez 'not', 'and', 'or', 'xor', 'nand', 'nor', 'xnor') : ")

    truth_table = generate_truth_table(num_vars)
    print("Table de vérité :")
    for row in truth_table:
        print(row)

    minimized_groups = minimize_with_karnaugh(truth_table, num_vars)
    print("Groupes minimisés avec la méthode de Karnaugh :")
    print(minimized_groups)

if __name__ == "__main__":
    main()

